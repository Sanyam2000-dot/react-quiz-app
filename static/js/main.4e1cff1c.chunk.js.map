{"version":3,"sources":["components/Navbar.js","components/Questions.js","components/Questioncard.js","App.js","index.js"],"names":["Navbar","className","Questions","question","answer","answerText","value","Questioncard","useState","initialQuestion","setInitialQuestion","score","setScore","showScore","setShowScore","map","answerOptions","onClick","nextQuestion","length","answerHandler","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAUeA,EAVA,WACb,OACE,8BACE,qBAAKC,UAAU,SAAf,SACE,+C,eCsDOC,EA1DG,CAAC,CACXC,SAAU,+CACVC,OAAQ,CACJ,CAAEC,WAAY,aAAcC,OAAO,GACnC,CAAED,WAAY,gBAAiBC,OAAO,GACtC,CAAED,WAAY,cAAeC,OAAO,KAG5C,CACIH,SAAU,wCACVC,OAAQ,CACJ,CAAEC,WAAY,MAAOC,OAAO,GAC5B,CAAED,WAAY,UAAWC,OAAO,GAChC,CAAED,WAAY,UAAWC,OAAO,KAGxC,CACIH,SAAU,qCACVC,OAAQ,CACJ,CAAEC,WAAY,GAAIC,OAAO,GACzB,CAAED,WAAY,GAAIC,OAAO,GACzB,CAAED,WAAY,GAAIC,OAAO,KAGjC,CACIH,SAAU,qCACVC,OAAQ,CACJ,CAAEC,WAAY,GAAIC,OAAO,GACzB,CAAED,WAAY,GAAIC,OAAO,GACzB,CAAED,WAAY,GAAIC,OAAO,KAGjC,CACIH,SAAU,kDACVC,OAAQ,CACJ,CAAEC,WAAY,SAAUC,OAAO,GAC/B,CAAED,WAAY,SAAUC,OAAO,GAC/B,CAAED,WAAY,eAAgBC,OAAO,KAG7C,CACIH,SAAU,qEACVC,OAAQ,CACJ,CAAEC,WAAY,SAAUC,OAAO,GAC/B,CAAED,WAAY,WAAYC,OAAO,GACjC,CAAED,WAAY,QAASC,OAAO,KAGtC,CACIH,SAAU,uEACVC,OAAQ,CACJ,CAAEC,WAAY,MAAOC,OAAO,GAC5B,CAAED,WAAY,UAAWC,OAAO,GAChC,CAAED,WAAY,OAAQC,OAAO,MCL1BC,EA7CM,WAAO,IAAD,EACqBC,mBAAS,GAD9B,mBAClBC,EADkB,KACDC,EADC,OAECF,mBAAS,GAFV,mBAElBG,EAFkB,KAEXC,EAFW,OAGSJ,oBAAS,GAHlB,mBAGlBK,EAHkB,KAGPC,EAHO,KAiBzB,OACE,qBAAKb,UAAU,YAAf,SACGY,EACC,iDAAoBF,KAEpB,gCACE,qBAAKV,UAAU,gBAAf,SACE,4BAAIC,EAAUO,GAAiBN,aAEjC,qBAAKF,UAAU,oBAAf,SACGC,EAAUO,GAAiBL,OAAOW,KAAI,SAACC,GACtC,OACE,wBACEf,UAAU,aAEVgB,QAAS,kBA5BzB,SAAuBX,IACP,IAAVA,GAEFM,EADeD,EAAQ,GAGzB,IAAMO,EAAeT,EAAkB,EAEnCS,EAAehB,EAAUiB,OAC3BT,EAAmBQ,GAEnBJ,GAAa,GAkBcM,CAAcJ,EAAcV,QAH7C,SAKGU,EAAcX,YAHVW,cCrBRK,MATf,WACE,OACE,sBAAKpB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCHNqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4e1cff1c.chunk.js","sourcesContent":["const Navbar = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar\">\r\n        <h1>Quiz App</h1>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","const Questions = [{\r\n        question: \"What is the name of Sheldon's favourite song\",\r\n        answer: [\r\n            { answerText: \"Soft kitty\", value: true },\r\n            { answerText: \"Healthy kitty\", value: false },\r\n            { answerText: \"Funny kitty\", value: false },\r\n        ],\r\n    },\r\n    {\r\n        question: \"What is the name of Penny's boyfriend\",\r\n        answer: [\r\n            { answerText: \"Raj\", value: false },\r\n            { answerText: \"Leonard\", value: true },\r\n            { answerText: \"Sheldon\", value: false },\r\n        ],\r\n    },\r\n    {\r\n        question: \"What is Sheldon's favourite number\",\r\n        answer: [\r\n            { answerText: 89, value: false },\r\n            { answerText: 73, value: true },\r\n            { answerText: 98, value: false },\r\n        ],\r\n    },\r\n    {\r\n        question: \"What is Sheldon's favourite number\",\r\n        answer: [\r\n            { answerText: 89, value: false },\r\n            { answerText: 73, value: true },\r\n            { answerText: 98, value: false },\r\n        ],\r\n    },\r\n    {\r\n        question: \"Elon Musk was born and raised in which country?\",\r\n        answer: [\r\n            { answerText: \"Israel\", value: false },\r\n            { answerText: \"Canada\", value: false },\r\n            { answerText: \"South Africa\", value: true },\r\n        ],\r\n    },\r\n    {\r\n        question: \"Tesla was founded in 2003. What was its first electric car called?\",\r\n        answer: [\r\n            { answerText: \"Falcon\", value: false },\r\n            { answerText: \"Roadster\", value: true },\r\n            { answerText: \"Lotus\", value: false },\r\n        ],\r\n    },\r\n    {\r\n        question: \"Which German automaker acquired a 10 percent stake in Tesla in 2010?\",\r\n        answer: [\r\n            { answerText: \"BMW\", value: false },\r\n            { answerText: \"Diamler\", value: true },\r\n            { answerText: \"Audi\", value: false },\r\n        ],\r\n    },\r\n];\r\n\r\nexport default Questions;","import React, { useState } from \"react\";\r\nimport Questions from \"./Questions\";\r\n\r\nconst Questioncard = () => {\r\n  const [initialQuestion, setInitialQuestion] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [showScore, setShowScore] = useState(false);\r\n  function answerHandler(value) {\r\n    if (value === true) {\r\n      var newScore = score + 1;\r\n      setScore(newScore);\r\n    }\r\n    const nextQuestion = initialQuestion + 1;\r\n\r\n    if (nextQuestion < Questions.length) {\r\n      setInitialQuestion(nextQuestion);\r\n    } else {\r\n      setShowScore(true);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      {showScore ? (\r\n        <div>Your score is {score}</div>\r\n      ) : (\r\n        <div>\r\n          <div className=\"questions-div\">\r\n            <p>{Questions[initialQuestion].question}</p>\r\n          </div>\r\n          <div className=\"answerOptions-div\">\r\n            {Questions[initialQuestion].answer.map((answerOptions) => {\r\n              return (\r\n                <button\r\n                  className=\"answer-btn\"\r\n                  key={answerOptions}\r\n                  onClick={() => answerHandler(answerOptions.value)}\r\n                >\r\n                  {answerOptions.answerText}\r\n                </button>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Questioncard;\r\n","import Navbar from \"./components/Navbar\";\nimport \"./App.css\";\nimport Questioncard from \"./components/Questioncard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Questioncard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}